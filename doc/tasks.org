-*- mode:org; mode:org-indent -*-
** :

* DEV / RUN
** TEXT: file:~/text/sc
** env
   - file:~/opt/sc_server
   - file:~/opt/sc_agents


** load /machine-card/
*** TRY http://doc.scrapy.org/en/0.16/intro/overview.html


* SETUP
** git init
   - $> cd ~/text/sc/lib/server
   - $> f=`echo ~/opt/sc_server/urls.py`; 
     ls -lt $f && mv -v $f . && ln -sv `pwd`/`basename $f` `dirname $f`;
     ls -lt $f
     ls -Hlt $f


** web start
*** $> (cd ~/opt/sc_server/; python manage.py runserver 8008 nextarg=123)
*** $> (cd ~/opt/sc_agents; python manage.py runserver 8009) &
*** $> curl http://127.0.0.1:8008/polls-tail/ &
*** $> elinks -dump http://localhost:8009/stamp | perl -pe s/^\\s+//
    [13/Nov/2012 11:50:12] "GET /stamp HTTP/1.1" 301 0
    srv: 2012-11-13 17:50:12
    [13/Nov/2012 11:50:12] "GET /stamp/ HTTP/1.1" 200 25
    agnt: 2012-11-13 17:50:12


** /ports-pair/
*** http://stackoverflow.com/questions/247483/http-get-request-in-javascript
    Note that this is subject to the Same Origin Policy. http://en.wikipedia.org/wiki/Same_origin_policy
**** try: Access-Control-Allow-Origin: http://example.com:8080 http://foo.example.com
**** try: http://loggly.com/blog/2011/12/enabling-cors-in-django-piston/
   + /django access-control-allow-origin/ -> https://gist.github.com/426829
**** use [[Live HTTP Headers]]
**** try http://blog.101ideas.cz/posts/subdomains-in-django-an-example.html


** mk stat/s col.
*** it have to doc~ 'db', for now ~> (simply) key-map
*** -> later s/t ~ redis


* STU
** https://docs.djangoproject.com/en/dev/intro/tutorial01/
*** $> python manage.py syncdb


** django..
*** TODO :stu: https://code.djangoproject.com/wiki/Tutorials
*** [1/2] install
***** DONE $> wget --progress=bar:force ftp://fr2.rpmfind.net/linux/epel/6/x86_64/Django-1.3.2-1.el6.noarch.rpm
***** :43_time: $> rpm -vi Django-1.4-1.fc17.noarch.rpm
      warning: Django-1.4-1.fc17.noarch.rpm: Header V3 RSA/SHA256 Signature, key ID 1aca3465: NOKEY
      error: Failed dependencies:
      python(abi) = 2.7 is needed by Django-1.4-1.fc17.noarch

***** https://docs.djangoproject.com/en/dev/intro/tutorial01/
****** DONE opt$> django-admin startproject django_try_1
****** DONE django_try_1$> python manage.py runserver &
****** :whatif: runserver #> Error: That port is already in use
    - $> killall inotail
    - $> netstat -apn | grep inotail

****** DONE $> elinks -dump http://127.0.0.1:8000 | head
       [0m                                   It worked!
       Congratulations on your first Django-powered page.
***** TODO install pip

*** TODO [0/2] google: /django stream file/
     - [X] http://stackoverflow.com/questions/2922874/how-to-stream-an-httpresponse-with-django
           [[file:/home/kraljo/opt/django_try_1/polls/views.py::resp%20%3D%20HttpResponse(%20stream_response_generator(),%20mimetype%3D'text/html')][resp = HttpResponse( stream_response_generator(), mimetype='text/html')]]
     - [ ] http://stackoverflow.com/questions/1619397/how-to-start-a-long-running-process-from-django-view
***** TODO :whatif: streaming will block server from responding?!
****** try: apache wsgi
     :gone: <= -r'1.5' (date	2012.10.18.07.57.09) -- seems also blocked in only-1 req/res :-((
******* try: $> yum search wsgi
******* DONE hello world
        django_try_1$> grep -rn wsgi /etc/httpd/***/*.conf
        /etc/httpd/conf.d/wsgi.conf:1:LoadModule wsgi_module modules/mod_wsgi.so
        /etc/httpd/conf/httpd.conf:1011:#pep> http://code.google.com/p/modwsgi/wiki/QuickConfigurationGuide
        /etc/httpd/conf/httpd.conf:1024:    WSGIScriptAlias /myapp /tmp/myapp.wsgi

        django_try_1$> elinks -dump http://localhost/myapp
           Hello World!

******* DONE google: /wsgi streaming/ -- seems promising
******* TODO try: conf. apache to use separate/d interpreter for each request -- /non-fast-cgi/s/
     - so opposite of http://blog.dscpl.com.au/2011/09/why-is-wsgi-deployment-under-fastcgi-so.html

******* TODO connect wsgi_mod to django project

****** TODO :STU: isnt it by ?!
******* by some ff settings? (recall acision dev/test env)
******* :gone: by ipv6? - > most probably not

****** try: jython (file:~/Documents/Howto-s/jython-try.con.log)
     - $> java -jar /usr/share/java/jython.jar #/
******* try: http://www.digipedia.pl/usenet/thread/14459/796/
******* try: simple server embedition
******** :FAV: http://stackoverflow.com/questions/1186328/embedded-http-server-in-swing-java-app
      - > http://tutorials.jenkov.com/java-multithreaded-servers/multithreaded-server.html

******** :try: http://fragments.turtlemeat.com/javawebserver.php, [[file:~/text/jdjango/single-server.java][cached]], <2012-11-01 Thu>
      - $> /opt/IBMJava2-142/bin/javac -classpath .:/usr/share/java/jython.jar server.java
        ()> cd ~/text/jdjango/
      - $> java -cp .:/usr/share/java/jython.jar server 8008 &
        The simple httpserver v. 0000000000
        Coded by Jon Berg<jon.berg[on server]turtlemeat.com>
        Trying to bind to localhost on port 8008...
        OK
      - $> elinks -dump http://localhost:8008/server.java | head -c 100

******** :try: try curl && base server on file:~/tmp/weblog~4/WebServer-Ticking.java - it works:
      - weblog~4$> java -cp . WebServer 8008 &
        curl http://localhost:8008/? &
        sleep 1
        curl http://localhost:8008/?

        [2] 4133
        From 0:0:0:0:0:0:0:1: GET /home/kraljo/tmp/weblog~4/?-->404
        pep> call rq? true
        ticker: url: ?
        <BR> - 1: .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..
        <BR> - 2: .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..

        From 0:0:0:0:0:0:0:1: GET /home/kraljo/tmp/weblog~4/?-->404
        pep> call rq? true
        ticker: url: ?
        <BR> - 1: .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..
        <BR> - 3: .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..

******** :try: use ports-pair (java-threads)
    - open 2 threads ~> on :81 & :82
    - get welcome page from 1st - which will print url/s pointing to 2nd one
    - process rq/s by 2nd and push them to 1st by inter-thread-ctl ?!
    - cmp w/ [[ports-pair (py-dbus)]]
******** :try: B-P dev-java-uniq weblog~4 :-S
	- file:/tmp/WebServer.java
	- file:/tmp/Tail.java
********* TODO but now, also file:~/tmp/weblog~4/WebServer-Ticking.java is blocking :-S

********* TODO -> try WebServer-Ticking at a8h

******** stu: http://sourceforge.net/projects/jicarilla/
******** stu: http://tjws.sourceforge.net/#embedable
******** stu:? http://wiki.eclipse.org/Jetty/Tutorial/Embedding_Jetty (? isnt jetty that un/pack/ing ?)


******* TODO [1/2] do: http://bzimmer.ziclix.com/presentations/jython-intro/slide-20.html servlet/s
******** TODO servlet

******* multi-thread
     - http://tutorials.jenkov.com/java-multithreaded-servers/multithreaded-server.html
     - http://stackoverflow.com/questions/9730898/multithreaded-http-server-to-take-get-and-post-from-client-browser
     - http://www.javaservletsjspweb.in/2009/06/simple-multithreaded-web-server-java.html#.UIFyDXPv0vA

****** try: semi-multi
    - >? semi-multi-thread - could it stay w/ ff block/ing ?

****** try: comet

****** try ports-pair (py-dbus)
******* 1st try pipe
     - from pyinotify import WatchManager, Notifier, ThreadedNotifier, EventsCodes, ProcessEvent

******* nxt try dbus
******* nxt try other simple call-back/s ~ asyncmongo | motor or so
******* try Twisted
******* try Celery


***** TODO :stu: response.streaming_content = wrap_streaming_content(response.streaming_content)
   - see https://docs.djangoproject.com/en/dev/topics/http/middleware/

*** TODO google: /django wiki/
*** file/s:
***** file:~/opt/django_try_1
***** file:~/text/jdjango
***** file:~/tmp/weblog~4

*** :43_time: Mezzanine - The Best Django CMS
**** 3.2.1.2. Installing and configuring django CMS in your Django project
   - http://docs.django-cms.org/en/2.2/getting_started/tutorial.html


*** http://tech.foolpig.com/2010/08/30/python-django-nginx/
     - cd /opt/python26/lib/python2.6/site-packages/
       ln -s /opt/python26/Django-1.2.1/django django
***** $> locate -i site-packages | grep -i python | grep -v lifeboat:
      /usr/lib/python2.6/site-packages
      ..
      /usr/lib64/python2.6/site-packages

*** locate (old) django
***** $> rpm -qa --root /mnt/lifeboat-root/ | grep -i django
      Django-1.3.2-1.el6.noarch

***** $> locate -i django
       /mnt/lifeboat-home/kraljo/opt/stephenmcd-mezzanine-a1c36d7/mezzanine/..
       ..
       /mnt/lifeboat-root/usr/bin/django-admin
       /mnt/lifeboat-root/usr/lib/python2.6/site-packages/Django-1.3.2-py2.6.egg-info
       /mnt/lifeboat-root/usr/lib/python2.6/site-packages/django
       ..
       /mnt/lifeboat-root/usr/lib/python2.6/site-packages/grappelli_safe-0.2.6-py2.6.egg/..
       ..
       /mnt/lifeboat-root/usr/share/doc/Django-1.3.2
       ..
       /mnt/lifeboat-root/var/lib/yum/yumdb/D/50f3b122752dc0b234bf0111b78cc715bf45e815-Django-1.3.2-1.el6-noarch
       ..
       /usr/share/doc/python-mako-0.3.4/examples/bench/django


** gen. http
*** Live HTTP Headers plugin


** pcs/s ctl
*** $> ps afwux | cat -n | grep -C2 inotail

** git
*** e> . ~/bin/lk; git push &
*** $> git log --graph --format="%ai %h --%d %s [ --%an ]" | perl -nle 'print "# $_"' | head
